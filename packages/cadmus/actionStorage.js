/* eslint no-unused-vars: off */
import { createAction } from 'redux-actions';
import keyMap from './keyMap';
import { INSERT_CHAR, INSERT_SPACE, INSERT_ENTER, REMOVE_CHAR } from './constants';

const insertChar = createAction(INSERT_CHAR, (event) => String(event.key));
const insertSpace = createAction(INSERT_SPACE);
const insertEnter = createAction(INSERT_ENTER);
const removeChar = createAction(REMOVE_CHAR);

export default {
  0: (e) => insertChar(e),
  1: (e) => insertChar(e),
  2: (e) => insertChar(e),
  3: (e) => insertChar(e),
  4: (e) => insertChar(e),
  5: (e) => insertChar(e),
  6: (e) => insertChar(e),
  7: (e) => insertChar(e),
  8: (e) => insertChar(e),
  9: (e) => insertChar(e),
  backspace: (e) => removeChar(),
  tab: (e) => {},
  enter: (e) => insertEnter(),
  shift: (e) => {},
  ctrl: (e) => {},
  alt: (e) => {},
  pause_break: (e) => {},
  caps_lock: (e) => {},
  escape: (e) => {},
  space: (e) => insertSpace(),
  page_up: (e) => {},
  page_down: (e) => {},
  end: (e) => {},
  home: (e) => {},
  left_arrow: (e) => {},
  up_arrow: (e) => {},
  right_arrow: (e) => {},
  down_arrow: (e) => {},
  insert: (e) => insertSpace(),
  delete: (e) => removeChar(),
  a: (e) => insertChar(e),
  b: (e) => insertChar(e),
  c: (e) => insertChar(e),
  d: (e) => insertChar(e),
  e: (e) => insertChar(e),
  f: (e) => insertChar(e),
  g: (e) => insertChar(e),
  h: (e) => insertChar(e),
  i: (e) => insertChar(e),
  j: (e) => insertChar(e),
  k: (e) => insertChar(e),
  l: (e) => insertChar(e),
  m: (e) => insertChar(e),
  n: (e) => insertChar(e),
  o: (e) => insertChar(e),
  p: (e) => insertChar(e),
  q: (e) => insertChar(e),
  r: (e) => insertChar(e),
  s: (e) => insertChar(e),
  t: (e) => insertChar(e),
  u: (e) => insertChar(e),
  v: (e) => insertChar(e),
  w: (e) => insertChar(e),
  x: (e) => insertChar(e),
  y: (e) => insertChar(e),
  z: (e) => insertChar(e),
  left_window_key: (e) => {},
  right_window_key: (e) => {},
  select_key: (e) => {},
  numpad_0: (e) => insertChar(e),
  numpad_1: (e) => insertChar(e),
  numpad_2: (e) => insertChar(e),
  numpad_3: (e) => insertChar(e),
  numpad_4: (e) => insertChar(e),
  numpad_5: (e) => insertChar(e),
  numpad_6: (e) => insertChar(e),
  numpad_7: (e) => insertChar(e),
  numpad_8: (e) => insertChar(e),
  numpad_9: (e) => insertChar(e),
  multiply: (e) => insertChar(e),
  add: (e) => insertChar(e),
  subtract: (e) => insertChar(e),
  decimal_point: (e) => insertChar(e),
  divide: (e) => insertChar(e),
  f1: (e) => {},
  f2: (e) => {},
  f3: (e) => {},
  f4: (e) => {},
  f5: (e) => {},
  f6: (e) => {},
  f7: (e) => {},
  f8: (e) => {},
  f9: (e) => {},
  f10: (e) => {},
  f11: (e) => {},
  f12: (e) => {},
  num_lock: (e) => {},
  scroll_lock: (e) => {},
  semi_colon: (e) => insertChar(e),
  equal_sign: (e) => insertChar(e),
  comma: (e) => insertChar(e),
  dash: (e) => insertChar(e),
  period: (e) => insertChar(e),
  forward_slash: (e) => insertChar(e),
  grave_accent: (e) => insertChar(e),
  open_bracket: (e) => insertChar(e),
  back_slash: (e) => insertChar(e),
  close_braket: (e) => insertChar(e),
  single_quote: (e) => insertChar(e),
};
